_VERSION_=""
_PROJECT_="${0##*/}"

FAIL(){
	printf "[L%0.4d] ERROR: %s\n" "$2" "$3" 1>&2
	[ $1 -eq 1 ] && exit 1
}

DEBUG(){
	if [ "$DEBUGME" == "true" ]; then
		if [ $# -eq 3 ]; then
			printf "[L%0.4d] DEBUG(\$%s): '%s'\n" "$1" "$2" "$3"
		elif [ $# -eq 2 ]; then
			printf "[L%0.4d] DEBUG: %s\n" "$1" "$2"
		else
			FAIL 1 "$LINENO" "Invalid 'DEBUG()' argument(s)."
		fi
	fi
}

DOM="https://github.com"

USAGE(){
	while read; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            ${_PROJECT_^^} ($_VERSION_)
		            Written by terminalforlife (terminalforlife@yahoo.com)

		            Dummy description for this template.

		SYNTAX:     $_PROJECT_ [OPTS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --quiet|-q              - Runs in quiet mode. Errors still output.
		            --update|-U             - Check for updates to $_PROJECT_.
		            --debug|-D              - Enables debugging information.

		SITE:       $DOM/terminalforlife/Extra
	EOF
}

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"; exit 0 ;;
		--quiet|-q)
			BEQUIET="true" ;;
		--update|-U)
			UPDATE="true" ;;

			DEBUG "$LINENO" "UPDATE" "$UPDATE" ;;
		--debug|-D)
			DEBUGME="true" ;;

			DEBUG "$LINENO" "DEBUGME" "$DEBUGME" ;;
		#-*)
		#	FAIL 1 "$LINENO" "Incorrect argument(s) specified." ;;
		#*)
		#	DEBUG "$LINENO" "1" "$1"
		#	DEBUG "$LINENO" "Breaking from parameter while loop."
		#
		#	break ;;
		*)
			DEBUG "$LINENO" "1" "$1"

			FAIL 1 "$LINENO" "Incorrect argument(s) specified." ;;
	esac

	DEBUG "$LINENO" "*" "$*"
	DEBUG "$LINENO" "Shifting positional parameters."

	shift
done

declare -i DEPCOUNT=0
for DEP in :; {
	if ! type -fP "$DEP" > /dev/null 2>&1; then
		FAIL 0 "$LINENO" "Dependency '$DEP' not met."
		DEPCOUNT+=1
	fi
}

[ $DEPCOUNT -eq 0 ] || exit 1

if [ "$UPDATE" == "true" ]; then
	DEBUG "$LINENO" "Beginning procedure to check for an update."

	if ! type -fP wget > /dev/null 2>&1; then
		FAIL 1 "$LINENO" "Dependency 'wget' not met."
	fi

	VERSION_URL="$DOM/terminalforlife/Extra/raw/master/versions"
	while IFS='=' read -a LINE; do
		if  [ "${LINE[0]}" == "$_PROJECT_" ]; then
			LATEST="${LINE[1]}"
			DEBUG "$LINENO" "LATEST" "$LATEST"

			if [[ "${LATEST//-}" =~ ^[0-9]{8}$ ]]; then
				DEBUG "$LINENO" "Self version detection successful."

				if [ ${LATEST//-} -gt ${_VERSION_//-} ]; then
					while read -r; do
						printf "%s\n" "$REPLY"
					done <<-EOF
						New version available:    $LATEST
						Current version:          $_VERSION_
					EOF
				fi
			else
				FAIL 1 "$LINENO" "Failed to check for available updates."
			fi
		fi
	done <<< "$(wget -q "$VERSION_URL" -O -)"

	exit 0
fi

#[ $UID -eq 0 ] && FAIL 1 "$LINENO" "Root access is required."

[ "$BEQUIET" == "true" ] && exec > /dev/null
[ "$DEBUGME" == "true" ] && set -x
